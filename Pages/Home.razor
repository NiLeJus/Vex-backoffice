@page "/"
@layout NoSidebarLayout
@inject IJSRuntime JS
@inject NavigationManager Navigation

@* @layout MainLayout *@

<PageTitle>Connexion</PageTitle>
    
    <div class="flex-column display-flex justify-content-center ">
        <h2 class="text-dark">Connexion</h2>
        <div>

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <InputText @bind-Value="loginModel.Email" type="email" class="form-control w-auto" placeholder="Email" />
                <InputText @bind-Value="loginModel.Password" type="password" class="form-control mt-3 w-auto" placeholder="Mot de passe" />
                <button type="submit" class="btn btn-primary mt-2">Connexion</button>
            </EditForm>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-2">@errorMessage</div>
            }
            @if (userData != null)
            {
                <div class="alert alert-success mt-2">
                    Connecté ! Données utilisateur : @userData
                </div>
            }
        </div>
    </div>
    
@code {
    private LoginModel loginModel = new();
    private string errorMessage;
    private string userData;

    private async Task HandleLogin()
    {
        errorMessage = null;
        userData = null;

        var result = await JS.InvokeAsync<LoginResult>("firebaseLogin", loginModel.Email, loginModel.Password);
        Console.WriteLine(result);

        if (result != null && result.success)
        {
            Console.WriteLine("Success");
            userData = System.Text.Json.JsonSerializer.Serialize(result.data);
            StateHasChanged();
            Navigation.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = result?.error ?? "Erreur inconnue";
        }
    }
    
    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    public class LoginResult
    {
        public bool success { get; set; }
        public AdminData data { get; set; }
        public string error { get; set; }
    }

    public class AdminData
    {
        public string email { get; set; }
        public bool isSuper { get; set; }
        public bool isCreated { get; set; }
    }

}



