@page "/signup"
@inject IJSRuntime JS

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email">Adresse e-mail</label>
        <InputText @bind-Value="model.Email" id="email" class="form-control" />
        <ValidationMessage For="@(() => model.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Mot de passe</label>
        <InputText @bind-Value="model.Password" id="password" type="password" class="form-control" />
        <ValidationMessage For="@(() => model.Password)" />
    </div>
    <button type="submit" class="btn btn-primary">S’inscrire</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-2">@message</div>
}

@code {
    private RegisterModel model = new();
    private string message;

    private async Task OnValidSubmit()
    {
        message = null;
        try
        {
            var result = await JS.InvokeAsync<string>("firebaseSignUp", model.Email, model.Password);
            message = result;
        }
        catch (JSException ex)
        {
            message = ex.Message;
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "L'e-mail est requis")]
        [EmailAddress(ErrorMessage = "Adresse e-mail invalide")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Le mot de passe est requis")]
        [MinLength(6, ErrorMessage = "6 caractères minimum")]
        public string Password { get; set; }
    }

}
